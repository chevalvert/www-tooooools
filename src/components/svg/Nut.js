import { Component } from 'utils/jsx'

// All paths are drawn on the center of a 100*100 viewBox
const PATHS = {
  square: 'M19.106,50C19.106,32.937 32.937,19.106 50,19.106C67.063,19.106 80.894,32.939 80.894,50.002C80.894,67.065 67.063,80.894 50,80.894C32.937,80.894 19.106,67.063 19.106,50M100,100.002L100,0.002L0,0L0,100L100,100.002Z',
  hex: 'M0,0 M50,22.011C65.458,22.011 77.99,34.542 77.99,50C77.99,65.458 65.458,77.99 50,77.99C34.542,77.99 22.01,65.458 22.01,50C22.01,34.542 34.542,22.011 50,22.011M25,93.301L75,93.301L100,50L75,6.699L25,6.699L0,50L25,93.301Z',
  circle: 'M79.018,50C79.018,66.027 66.027,79.018 50,79.018C33.973,79.018 20.982,66.027 20.982,50C20.982,33.973 33.973,20.982 50,20.982C66.027,20.982 79.018,33.973 79.018,50M0,50C0,77.614 22.386,100 50,100C77.614,100 100,77.614 100,50C100,22.386 77.614,0 50,0C22.386,0 0,22.386 0,50'
}

export default class Nut extends Component {
  beforeRender (props) {
    this.state = {
      shape: props.shape || 'hex'
    }
  }

  template (props) {
    return (
      <path
        {...props}
        d={PATHS[props.shape]}
        transform={`translate(${props.x || 0} ${props.y || 0}) scale(${(props.width ?? 100) / 100} ${(props.height ?? 100) / 100})`}
      />
    )
  }
}
